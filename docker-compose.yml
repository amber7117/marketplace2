version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: vtp-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - vtp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vtp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - vtp-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: vtp-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      AUTH_SERVICE_URL: http://auth-service:3001
      PRODUCT_SERVICE_URL: http://product-service:3002
      ORDER_SERVICE_URL: http://order-service:3003
      WALLET_SERVICE_URL: http://wallet-service:3004
      PAYMENT_SERVICE_URL: http://payment-service:3005
      NOTIFICATION_SERVICE_URL: http://notification-service:3006
      FRONTEND_URL: http://localhost:3001
    depends_on:
      - auth-service
      - product-service
      - order-service
    networks:
      - vtp-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: vtp-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-auth?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 7d
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
    depends_on:
      - mongodb
    networks:
      - vtp-network

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: vtp-product-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-product?authSource=admin
      DEFAULT_PAGE_SIZE: 20
      MAX_PAGE_SIZE: 100
    depends_on:
      - mongodb
    networks:
      - vtp-network

  # Order Service
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: vtp-order-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      PORT: 3003
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-order?authSource=admin
      PRODUCT_SERVICE_URL: http://product-service:3002
      WALLET_SERVICE_URL: http://wallet-service:3004
      PAYMENT_SERVICE_URL: http://payment-service:3005
      NOTIFICATION_SERVICE_URL: http://notification-service:3006
      ORDER_NUMBER_PREFIX: VTP
      ORDER_EXPIRY_MINUTES: 30
      ENABLE_AUTO_DELIVERY: true
    depends_on:
      - mongodb
      - product-service
    networks:
      - vtp-network

  # Wallet Service
  wallet-service:
    build:
      context: ./services/wallet-service
      dockerfile: Dockerfile
    container_name: vtp-wallet-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: production
      PORT: 3004
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-wallet?authSource=admin
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - vtp-network

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: vtp-payment-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: production
      PORT: 3005
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-payment?authSource=admin
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret
      RAZER_API_KEY: your_razer_api_key
      RAZER_API_SECRET: your_razer_api_secret
    depends_on:
      - mongodb
    networks:
      - vtp-network

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: vtp-notification-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
      PORT: 3006
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/virtual-trading-notification?authSource=admin
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      TELEGRAM_BOT_TOKEN: your_telegram_bot_token
    depends_on:
      - mongodb
    networks:
      - vtp-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  vtp-network:
    driver: bridge
